import React, { useState } from 'react';
import URLInputForm from './components/URLInputForm';
import TriggerList from './components/TriggerList';
import Loader from './components/Loader';
import { SparklesIcon } from './components/icons';
import { getTriggersFromVideo } from './services/geminiService';
import { Trigger, GroundingSource } from './types';
import VideoPlayer from './components/VideoPlayer';
import SourceList from './components/SourceList';

const extractVideoId = (url: string): string | null => {
  const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
  const match = url.match(regex);
  return match ? match[1] : null;
};

const App: React.FC = () => {
  const [url, setUrl] = useState<string>('');
  const [triggers, setTriggers] = useState<Trigger[] | null>(null);
  const [sources, setSources] = useState<GroundingSource[] | null>(null);
  const [videoId, setVideoId] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!url.trim()) {
      setError('Please enter a valid YouTube URL.');
      return;
    }
    
    const extractedId = extractVideoId(url);
    if (!extractedId) {
      setError('Invalid YouTube URL format. Please check the URL and try again.');
      return;
    }

    setIsLoading(true);
    setError(null);
    setTriggers(null);
    setSources(null);
    setVideoId(null);

    try {
      const result = await getTriggersFromVideo(url);
      setTriggers(result.triggers);
      setSources(result.sources);
      setVideoId(extractedId);
    } catch (err) {
      console.error(err);
      setError('Failed to analyze the video. The AI may be unavailable, or the request could not be processed. Please try again later.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-slate-900 flex flex-col items-center justify-start py-12 px-4 sm:px-6 lg:px-8">
      <div className="w-full max-w-2xl mx-auto space-y-8">
        <div className="text-center">
          <SparklesIcon className="mx-auto h-12 w-auto text-purple-400" />
          <h1 className="mt-4 text-3xl font-bold tracking-tight text-slate-100 sm:text-4xl">
            ASMR Trigger Finder
          </h1>
          <p className="mt-4 text-lg text-slate-400">
            Enter a YouTube ASMR video URL to get an AI-generated list of potential triggers and timestamps.
          </p>
        </div>

        <URLInputForm
          url={url}
          setUrl={setUrl}
          handleSubmit={handleSubmit}
          isLoading={isLoading}
        />

        <div className="mt-8 min-h-[300px]">
          {isLoading && <Loader />}
          {error && (
            <div className="bg-red-900/50 border border-red-700 text-red-300 px-4 py-3 rounded-lg text-center" role="alert">
              <strong className="font-bold">Error: </strong>
              <span className="block sm:inline">{error}</span>
            </div>
          )}

          {triggers && videoId && (
            <div className="space-y-8">
              <VideoPlayer videoId={videoId} />
               <div className="text-center text-sm text-slate-500 my-4 p-3 bg-slate-800/50 rounded-lg border border-slate-700/50">
                <p><strong>Note:</strong> The AI analyzes the video's title, description, and comments to find triggers. It does not watch or listen to the video directly.</p>
              </div>
              <TriggerList triggers={triggers} videoId={videoId} />
              {sources && sources.length > 0 && <SourceList sources={sources} />}
            </div>
          )}
          
          {!isLoading && !error && !triggers && (
              <div className="text-center text-slate-500 pt-10">
                <p>Results will appear here once you submit a URL.</p>
              </div>
          )}
        </div>
        
        <footer className="text-center text-slate-600 text-sm mt-12">
            <p>Disclaimer: Triggers and timestamps are generated by an AI and may not be perfectly accurate. This is for entertainment purposes only.</p>
        </footer>
      </div>
    </div>
  );
};

export default App;